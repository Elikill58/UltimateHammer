import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'eclipse'

sourceSets {
    main {
        java.srcDirs = ['src']
        resources.srcDirs = ['resources']
    }
    test {
        java.srcDirs = ['testSrc']
        resources.srcDirs = ['testResources']
    }
}

eclipse {
    project {
        name = 'UHv2-common'
    }
}

dependencies {
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.0")
    implementation "org.yaml:snakeyaml:1.29"
}

processResources {
    def props = [version: version]
    inputs.properties(props)
    // Do not try to expand service files, they may contain a dollar sign to mark inner classes
    filesNotMatching(['META-INF/services/*']) {
        expand(props)
    }
}

shadowJar {
    archiveBaseName.set('ultimatehammer')
    archiveAppendix.set('common')
    archiveClassifier.set(null)
    
    mergeServiceFiles()
}

build.dependsOn shadowJar

parent.tasks.named('shadowJar', ShadowJar) {
    it.from(shadowJar.outputs)
}

test {
    useJUnitPlatform()
}